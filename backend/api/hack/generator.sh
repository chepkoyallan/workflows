#!/usr/bin/env bash

set -ex

export TMP_OUTPUT=/tmp

# Change directory.
cd /go/src/github.com/chepkoyallan/workflows

WORKFLOW_VERSION=0.0.1

# Delete currently generated code.
rm -r -f backend/api/go_http_client/*
rm -f -f backend/api/go_client/*
# Cannot delete backend/api/swagger/*, because there are manually maintained definition files too.

# Generate *.pb.go (grpc api client) from *.proto.
${PROTOCCOMPILER} -I. -Ibackend/api \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/ \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/ \
    -I/usr/include/ \
    --plugin=protoc-gen-go=/go/bin/protoc-gen-go  \
    --go_out=plugins=grpc:${TMP_OUTPUT} \
    backend/api/*.proto

# Generate *.pb.gw.go (grpc api rest client) from *.proto.
${PROTOCCOMPILER} -I. -Ibackend/api \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/ \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/ \
    -I/usr/include/ \
    --plugin=protoc-gen-grpc-gateway=/go/bin/protoc-gen-grpc-gateway \
    --grpc-gateway_out=logtostderr=true:${TMP_OUTPUT} \
    backend/api/*.proto
# Move *.pb.go and *.gw.go to go_client folder.
cp ${TMP_OUTPUT}/github.com/chepkoyallan/workflows/backend/api/go_client/* ./backend/api/go_client

# Generate *.swagger.json from *.proto into swagger folder.
${PROTOCCOMPILER} -I. -Ibackend/api \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/ \
    -I/go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/ \
    -I//usr/include/ \
    --plugin=protoc-gen-swagger=/go/bin/protoc-gen-swagger \
    --swagger_out=logtostderr=true:${TMP_OUTPUT} \
    backend/api/*.proto
cp ${TMP_OUTPUT}/backend/api/*.swagger.json ./backend/api/swagger
# Generate a single swagger json file from the swagger json files of all models.
# Note: use backend/backend/api/swagger/{run,job,experiment,pipeline,pipeline.upload,healthz}.swagger.json when apt-get can install jq-1.6

# jq -s 'reduce .[] as $item ({}; . * $item) | .info.title = "Wellness Platform API" | .info.description = "This file contains REST API specification for wellness Platform. The file is autogenerated from the swagger definition." | .info.version = "'$WORKFLOW_VERSION'" | .info.contact = { "name": "allan", "email": "allankiplangat22@gmail.com", "url": "https://www." } | .info.license = { "name": "Apache 2.0", "url": "https://raw.githubusercontent.com/Wellnajapan/wellness-project-/master/LICENSE" }' \
#     backend/api/swagger/healthz.swagger.json \
#     backend/api/swagger/group.swagger.json \
#     > "backend/api/swagger/wellness-platform.swagger.json"
